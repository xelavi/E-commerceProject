{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport axios from 'axios';\nexport default {\n  name: 'Checkout',\n  data() {\n    return {\n      cart: {\n        items: []\n      },\n      stripe: {},\n      card: {},\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      address: '',\n      zipcode: '',\n      place: '',\n      errors: []\n    };\n  },\n  mounted() {\n    document.title = 'Checkout | Djackets';\n    this.cart = this.$store.state.cart;\n    if (this.cartTotalLength > 0) {\n      this.stripe = Stripe('pk_test_51H1HiuKBJV2qfWbD2gQe6aqanfw6Eyul5PO2KeOuSRlUMuaV4TxEtaQyzr9DbLITSZweL7XjK3p74swcGYrE2qEX00Hz7GmhMI');\n      const elements = this.stripe.elements();\n      this.card = elements.create('card', {\n        hidePostalCode: true\n      });\n      this.card.mount('#card-element');\n    }\n  },\n  methods: {\n    getItemTotal(item) {\n      return item.quantity * item.product.price;\n    },\n    submitForm() {\n      this.errors = [];\n      if (this.first_name === '') {\n        this.errors.push('The first name field is missing!');\n      }\n      if (this.last_name === '') {\n        this.errors.push('The last name field is missing!');\n      }\n      if (this.email === '') {\n        this.errors.push('The email field is missing!');\n      }\n      if (this.phone === '') {\n        this.errors.push('The phone field is missing!');\n      }\n      if (this.address === '') {\n        this.errors.push('The address field is missing!');\n      }\n      if (this.zipcode === '') {\n        this.errors.push('The zip code field is missing!');\n      }\n      if (this.place === '') {\n        this.errors.push('The place field is missing!');\n      }\n      if (!this.errors.length) {\n        this.$store.commit('setIsLoading', true);\n        this.stripe.createToken(this.card).then(result => {\n          if (result.error) {\n            this.$store.commit('setIsLoading', false);\n            this.errors.push('Something went wrong with Stripe. Please try again');\n            console.log(result.error.message);\n          } else {\n            this.stripeTokenHandler(result.token);\n          }\n        });\n      }\n    },\n    async stripeTokenHandler(token) {\n      const items = [];\n      for (let i = 0; i < this.cart.items.length; i++) {\n        const item = this.cart.items[i];\n        const obj = {\n          product: item.product.id,\n          quantity: item.quantity,\n          price: item.product.price * item.quantity\n        };\n        items.push(obj);\n      }\n      const data = {\n        'first_name': this.first_name,\n        'last_name': this.last_name,\n        'email': this.email,\n        'address': this.address,\n        'zipcode': this.zipcode,\n        'place': this.place,\n        'phone': this.phone,\n        'items': items,\n        'stripe_token': token.id\n      };\n      await axios.post('/api/v1/checkout/', data).then(response => {\n        this.$store.commit('clearCart');\n        this.$router.push('/cart/success');\n      }).catch(error => {\n        this.errors.push('Something went wrong. Please try again');\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    }\n  },\n  computed: {\n    cartTotalPrice() {\n      return this.cart.items.reduce((acc, curVal) => {\n        return acc += curVal.product.price * curVal.quantity;\n      }, 0);\n    },\n    cartTotalLength() {\n      return this.cart.items.reduce((acc, curVal) => {\n        return acc += curVal.quantity;\n      }, 0);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","cart","items","stripe","card","first_name","last_name","email","phone","address","zipcode","place","errors","mounted","document","title","$store","state","cartTotalLength","Stripe","elements","create","hidePostalCode","mount","methods","getItemTotal","item","quantity","product","price","submitForm","push","length","commit","createToken","then","result","error","console","log","message","stripeTokenHandler","token","i","obj","id","post","response","$router","catch","computed","cartTotalPrice","reduce","acc","curVal"],"sources":["C:\\Users\\xelavi\\Documents\\VSCode\\E-commerceweb\\XelaviStore_vue\\src\\views\\Checkout.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-checkout\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-12\">\r\n                <h1 class=\"title\">Checkout</h1>\r\n            </div>\r\n\r\n            <div class=\"column is-12 box\">\r\n                <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Product</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <tr\r\n                            v-for=\"item in cart.items\"\r\n                            v-bind:key=\"item.product.id\"\r\n                        >\r\n                            <td>{{ item.product.name }}</td>\r\n                            <td>${{ item.product.price }}</td>\r\n                            <td>{{ item.quantity }}</td>\r\n                            <td>${{ getItemTotal(item).toFixed(2) }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colspan=\"2\">Total</td>\r\n                            <td>{{ cartTotalLength }}</td>\r\n                            <td>${{ cartTotalPrice.toFixed(2) }}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"column is-12 box\">\r\n                <h2 class=\"subtitle\">Shipping details</h2>\r\n\r\n                <p class=\"has-text-grey mb-4\">* All fields are required</p>\r\n\r\n                <div class=\"columns is-multiline\">\r\n                    <div class=\"column is-6\">\r\n                        <div class=\"field\">\r\n                            <label>First name*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"first_name\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>Last name*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"last_name\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>E-mail*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"email\" class=\"input\" v-model=\"email\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>Phone*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"phone\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"column is-6\">\r\n                        <div class=\"field\">\r\n                            <label>Address*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"address\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>Zip code*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"zipcode\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>Place*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"place\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"notification is-danger mt-4\" v-if=\"errors.length\">\r\n                    <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\r\n                </div>\r\n\r\n                <hr>\r\n\r\n                <div id=\"card-element\" class=\"mb-5\"></div>\r\n\r\n                <template v-if=\"cartTotalLength\">\r\n                    <hr>\r\n\r\n                    <button class=\"button is-dark\" @click=\"submitForm\">Pay with Stripe</button>\r\n                </template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'Checkout',\r\n    data() {\r\n        return {\r\n            cart: {\r\n                items: []\r\n            },\r\n            stripe: {},\r\n            card: {},\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: '',\r\n            zipcode: '',\r\n            place: '',\r\n            errors: []\r\n        }\r\n    },\r\n    mounted() {\r\n        document.title = 'Checkout | Djackets'\r\n\r\n        this.cart = this.$store.state.cart\r\n\r\n        if (this.cartTotalLength > 0) {\r\n            this.stripe = Stripe('pk_test_51H1HiuKBJV2qfWbD2gQe6aqanfw6Eyul5PO2KeOuSRlUMuaV4TxEtaQyzr9DbLITSZweL7XjK3p74swcGYrE2qEX00Hz7GmhMI')\r\n            const elements = this.stripe.elements();\r\n            this.card = elements.create('card', { hidePostalCode: true })\r\n\r\n            this.card.mount('#card-element')\r\n        }\r\n    },\r\n    methods: {\r\n        getItemTotal(item) {\r\n            return item.quantity * item.product.price\r\n        },\r\n        submitForm() {\r\n            this.errors = []\r\n\r\n            if (this.first_name === '') {\r\n                this.errors.push('The first name field is missing!')\r\n            }\r\n\r\n            if (this.last_name === '') {\r\n                this.errors.push('The last name field is missing!')\r\n            }\r\n\r\n            if (this.email === '') {\r\n                this.errors.push('The email field is missing!')\r\n            }\r\n\r\n            if (this.phone === '') {\r\n                this.errors.push('The phone field is missing!')\r\n            }\r\n\r\n            if (this.address === '') {\r\n                this.errors.push('The address field is missing!')\r\n            }\r\n\r\n            if (this.zipcode === '') {\r\n                this.errors.push('The zip code field is missing!')\r\n            }\r\n\r\n            if (this.place === '') {\r\n                this.errors.push('The place field is missing!')\r\n            }\r\n\r\n            if (!this.errors.length) {\r\n                this.$store.commit('setIsLoading', true)\r\n\r\n                this.stripe.createToken(this.card).then(result => {                    \r\n                    if (result.error) {\r\n                        this.$store.commit('setIsLoading', false)\r\n\r\n                        this.errors.push('Something went wrong with Stripe. Please try again')\r\n\r\n                        console.log(result.error.message)\r\n                    } else {\r\n                        this.stripeTokenHandler(result.token)\r\n                    }\r\n                })\r\n            }\r\n            \r\n        },\r\n        async stripeTokenHandler(token) {\r\n            const items = []\r\n\r\n            for (let i = 0; i < this.cart.items.length; i++) {\r\n                const item = this.cart.items[i]\r\n                const obj = {\r\n                    product: item.product.id,\r\n                    quantity: item.quantity,\r\n                    price: item.product.price * item.quantity\r\n                }\r\n\r\n                items.push(obj)\r\n            }\r\n\r\n            const data = {\r\n                'first_name': this.first_name,\r\n                'last_name': this.last_name,\r\n                'email': this.email,\r\n                'address': this.address,\r\n                'zipcode': this.zipcode,\r\n                'place': this.place,\r\n                'phone': this.phone,\r\n                'items': items,\r\n                'stripe_token': token.id\r\n            }\r\n\r\n            await axios\r\n                .post('/api/v1/checkout/', data)\r\n                .then(response => {\r\n                    this.$store.commit('clearCart')\r\n                    this.$router.push('/cart/success')\r\n                })\r\n                .catch(error => {\r\n                    this.errors.push('Something went wrong. Please try again')\r\n\r\n                    console.log(error)\r\n                })\r\n\r\n                this.$store.commit('setIsLoading', false)\r\n        }\r\n    },\r\n    computed: {\r\n        cartTotalPrice() {\r\n            return this.cart.items.reduce((acc, curVal) => {\r\n                return acc += curVal.product.price * curVal.quantity\r\n            }, 0)\r\n        },\r\n        cartTotalLength() {\r\n            return this.cart.items.reduce((acc, curVal) => {\r\n                return acc += curVal.quantity\r\n            }, 0)\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";;;AAuHA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,KAAK,EAAE;MACX,CAAC;MACDC,MAAM,EAAE,CAAC,CAAC;MACVC,IAAI,EAAE,CAAC,CAAC;MACRC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACNC,QAAQ,CAACC,KAAI,GAAI,qBAAoB;IAErC,IAAI,CAACd,IAAG,GAAI,IAAI,CAACe,MAAM,CAACC,KAAK,CAAChB,IAAG;IAEjC,IAAI,IAAI,CAACiB,eAAc,GAAI,CAAC,EAAE;MAC1B,IAAI,CAACf,MAAK,GAAIgB,MAAM,CAAC,6GAA6G;MAClI,MAAMC,QAAO,GAAI,IAAI,CAACjB,MAAM,CAACiB,QAAQ,CAAC,CAAC;MACvC,IAAI,CAAChB,IAAG,GAAIgB,QAAQ,CAACC,MAAM,CAAC,MAAM,EAAE;QAAEC,cAAc,EAAE;MAAK,CAAC;MAE5D,IAAI,CAAClB,IAAI,CAACmB,KAAK,CAAC,eAAe;IACnC;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,YAAYA,CAACC,IAAI,EAAE;MACf,OAAOA,IAAI,CAACC,QAAO,GAAID,IAAI,CAACE,OAAO,CAACC,KAAI;IAC5C,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT,IAAI,CAAClB,MAAK,GAAI,EAAC;MAEf,IAAI,IAAI,CAACP,UAAS,KAAM,EAAE,EAAE;QACxB,IAAI,CAACO,MAAM,CAACmB,IAAI,CAAC,kCAAkC;MACvD;MAEA,IAAI,IAAI,CAACzB,SAAQ,KAAM,EAAE,EAAE;QACvB,IAAI,CAACM,MAAM,CAACmB,IAAI,CAAC,iCAAiC;MACtD;MAEA,IAAI,IAAI,CAACxB,KAAI,KAAM,EAAE,EAAE;QACnB,IAAI,CAACK,MAAM,CAACmB,IAAI,CAAC,6BAA6B;MAClD;MAEA,IAAI,IAAI,CAACvB,KAAI,KAAM,EAAE,EAAE;QACnB,IAAI,CAACI,MAAM,CAACmB,IAAI,CAAC,6BAA6B;MAClD;MAEA,IAAI,IAAI,CAACtB,OAAM,KAAM,EAAE,EAAE;QACrB,IAAI,CAACG,MAAM,CAACmB,IAAI,CAAC,+BAA+B;MACpD;MAEA,IAAI,IAAI,CAACrB,OAAM,KAAM,EAAE,EAAE;QACrB,IAAI,CAACE,MAAM,CAACmB,IAAI,CAAC,gCAAgC;MACrD;MAEA,IAAI,IAAI,CAACpB,KAAI,KAAM,EAAE,EAAE;QACnB,IAAI,CAACC,MAAM,CAACmB,IAAI,CAAC,6BAA6B;MAClD;MAEA,IAAI,CAAC,IAAI,CAACnB,MAAM,CAACoB,MAAM,EAAE;QACrB,IAAI,CAAChB,MAAM,CAACiB,MAAM,CAAC,cAAc,EAAE,IAAI;QAEvC,IAAI,CAAC9B,MAAM,CAAC+B,WAAW,CAAC,IAAI,CAAC9B,IAAI,CAAC,CAAC+B,IAAI,CAACC,MAAK,IAAK;UAC9C,IAAIA,MAAM,CAACC,KAAK,EAAE;YACd,IAAI,CAACrB,MAAM,CAACiB,MAAM,CAAC,cAAc,EAAE,KAAK;YAExC,IAAI,CAACrB,MAAM,CAACmB,IAAI,CAAC,oDAAoD;YAErEO,OAAO,CAACC,GAAG,CAACH,MAAM,CAACC,KAAK,CAACG,OAAO;UACpC,OAAO;YACH,IAAI,CAACC,kBAAkB,CAACL,MAAM,CAACM,KAAK;UACxC;QACJ,CAAC;MACL;IAEJ,CAAC;IACD,MAAMD,kBAAkBA,CAACC,KAAK,EAAE;MAC5B,MAAMxC,KAAI,GAAI,EAAC;MAEf,KAAK,IAAIyC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAAC1C,IAAI,CAACC,KAAK,CAAC8B,MAAM,EAAEW,CAAC,EAAE,EAAE;QAC7C,MAAMjB,IAAG,GAAI,IAAI,CAACzB,IAAI,CAACC,KAAK,CAACyC,CAAC;QAC9B,MAAMC,GAAE,GAAI;UACRhB,OAAO,EAAEF,IAAI,CAACE,OAAO,CAACiB,EAAE;UACxBlB,QAAQ,EAAED,IAAI,CAACC,QAAQ;UACvBE,KAAK,EAAEH,IAAI,CAACE,OAAO,CAACC,KAAI,GAAIH,IAAI,CAACC;QACrC;QAEAzB,KAAK,CAAC6B,IAAI,CAACa,GAAG;MAClB;MAEA,MAAM5C,IAAG,GAAI;QACT,YAAY,EAAE,IAAI,CAACK,UAAU;QAC7B,WAAW,EAAE,IAAI,CAACC,SAAS;QAC3B,OAAO,EAAE,IAAI,CAACC,KAAK;QACnB,SAAS,EAAE,IAAI,CAACE,OAAO;QACvB,SAAS,EAAE,IAAI,CAACC,OAAO;QACvB,OAAO,EAAE,IAAI,CAACC,KAAK;QACnB,OAAO,EAAE,IAAI,CAACH,KAAK;QACnB,OAAO,EAAEN,KAAK;QACd,cAAc,EAAEwC,KAAK,CAACG;MAC1B;MAEA,MAAM/C,KAAI,CACLgD,IAAI,CAAC,mBAAmB,EAAE9C,IAAI,EAC9BmC,IAAI,CAACY,QAAO,IAAK;QACd,IAAI,CAAC/B,MAAM,CAACiB,MAAM,CAAC,WAAW;QAC9B,IAAI,CAACe,OAAO,CAACjB,IAAI,CAAC,eAAe;MACrC,CAAC,EACAkB,KAAK,CAACZ,KAAI,IAAK;QACZ,IAAI,CAACzB,MAAM,CAACmB,IAAI,CAAC,wCAAwC;QAEzDO,OAAO,CAACC,GAAG,CAACF,KAAK;MACrB,CAAC;MAED,IAAI,CAACrB,MAAM,CAACiB,MAAM,CAAC,cAAc,EAAE,KAAK;IAChD;EACJ,CAAC;EACDiB,QAAQ,EAAE;IACNC,cAAcA,CAAA,EAAG;MACb,OAAO,IAAI,CAAClD,IAAI,CAACC,KAAK,CAACkD,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;QAC3C,OAAOD,GAAE,IAAKC,MAAM,CAAC1B,OAAO,CAACC,KAAI,GAAIyB,MAAM,CAAC3B,QAAO;MACvD,CAAC,EAAE,CAAC;IACR,CAAC;IACDT,eAAeA,CAAA,EAAG;MACd,OAAO,IAAI,CAACjB,IAAI,CAACC,KAAK,CAACkD,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;QAC3C,OAAOD,GAAE,IAAKC,MAAM,CAAC3B,QAAO;MAChC,CAAC,EAAE,CAAC;IACR;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
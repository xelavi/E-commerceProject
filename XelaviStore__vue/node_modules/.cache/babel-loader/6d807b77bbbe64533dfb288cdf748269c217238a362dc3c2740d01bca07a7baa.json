{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-checkout\"\n};\nconst _hoisted_2 = {\n  class: \"columns is-multiline\"\n};\nconst _hoisted_3 = {\n  class: \"column is-12 box\"\n};\nconst _hoisted_4 = {\n  class: \"table is-fullwidth\"\n};\nconst _hoisted_5 = {\n  colspan: \"2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"column is-12\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"Checkout\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Product\"), _createElementVNode(\"th\", null, \"Price\"), _createElementVNode(\"th\", null, \"Quantity\"), _createElementVNode(\"th\", null, \"Total\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cart.items, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.product.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.product.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.product.price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getItemTotal(item).toFixed(2)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"tfoot\", null, [_createElementVNode(\"tr\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"td\", {\n    colspan: \"2\"\n  }, \"Total\", -1 /* HOISTED */)), _createElementVNode(\"td\", null, _toDisplayString(_ctx.carTotalLength), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_5, _toDisplayString(_ctx.CardTotalPrice.toFixed(2)), 1 /* TEXT */)])])])]), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"column is-12 box\"\n  }, [_createElementVNode(\"h2\", {\n    class: \"subtitle\"\n  }, \"Shipping details\"), _createElementVNode(\"p\", {\n    class: \"has-text-grey mb-4\"\n  }, \"* All fields are required\"), _createElementVNode(\"div\", {\n    class: \"columns is-multiline\"\n  })], -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["class","colspan","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","cart","items","item","key","product","id","_toDisplayString","name","price","quantity","$options","getItemTotal","toFixed","_ctx","carTotalLength","_hoisted_5","CardTotalPrice"],"sources":["C:\\Users\\xelavi\\Documents\\VSCode\\E-commerceweb\\XelaviStore_vue\\src\\views\\Checkout.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-checkout\">\r\n    <div class=\"columns is-multiline\">\r\n        <div class=\"column is-12\">\r\n            <h1 class=\"title\">Checkout</h1>\r\n             </div>\r\n             <div class=\"column is-12 box\">\r\n                <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Product</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr \r\n                        v-for=\"item in cart.items\"\r\n                        v-bind:key=\"item.product.id\">\r\n                        <td> {{ item.product.name }}</td>\r\n                        <td> {{ item.product.price }}</td>   \r\n                        <td> {{ item.quantity }}</td>\r\n                        <td> {{ getItemTotal(item).toFixed(2) }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colspan=\"2\">Total</td>\r\n                            <td>{{ carTotalLength }}</td>\r\n                            <td colspan=\"2\">{{CardTotalPrice.toFixed(2)}}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n             </div>\r\n\r\n             <div class=\"column is-12 box\">\r\n                <h2 class=\"subtitle\">Shipping details</h2>\r\n                <p class=\"has-text-grey mb-4\">* All fields are required</p>\r\n\r\n                <div class=\"columns is-multiline\">\r\n\r\n                </div>\r\n             </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios, { toFormData } from 'axios'\r\nexport default {\r\n    name: 'Checkout',\r\n    data() {\r\n        return {\r\n            cart: {\r\n                items: []\r\n            },\r\n            stripe: {},\r\n            card: {},\r\n            first_name: '',\r\n            email: '',\r\n            phone: '',\r\n            adress: '',\r\n            zipcode:'',\r\n            place:'',\r\n            errors: []\r\n        }\r\n    },\r\n    mounted() {\r\n        document.title = 'Checkout | XelaviStore'\r\n        this.cart = this.$store.state.cart\r\n    },\r\n    methods: {\r\n        getItemTotal(item) {\r\n            return item.quantity * item.product.price\r\n        },\r\n    },\r\n    computed: {\r\n        cartTotalPrice() {\r\n            return this.cart.items.reduce((ac,curlVar) => {\r\n                return acc+= curlVar.product.price * curVal.quantity\r\n            },0)\r\n        },\r\n        cartTotalLength() {\r\n            return this.cart.items.reduce((acc,curVal) => {\r\n                return acc+= curVal.quantity\r\n            },0)\r\n        \r\n        }\r\n    }\r\n\r\n}\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAsB;;EAInBA,KAAK,EAAC;AAAkB;;EACnBA,KAAK,EAAC;AAAoB;;EAuBjBC,OAAO,EAAC;AAAG;;uBA7BvCC,mBAAA,CA4CE,OA5CFC,UA4CE,GA3CFC,mBAAA,CA0CM,OA1CNC,UA0CM,G,0BAzCFD,mBAAA,CAEW;IAFNJ,KAAK,EAAC;EAAc,IACrBI,mBAAA,CAA+B;IAA3BJ,KAAK,EAAC;EAAO,GAAC,UAAQ,E,sBAEzBI,mBAAA,CA4BM,OA5BNE,UA4BM,GA3BHF,mBAAA,CA0BQ,SA1BRG,UA0BQ,G,0BAzBJH,mBAAA,CAOQ,gBANJA,mBAAA,CAKK,aAJDA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAc,YAAV,OAAK,E,wBAGjBA,mBAAA,CASQ,iB,kBARJF,mBAAA,CAOKM,SAAA,QAxB7BC,WAAA,CAkBuCC,KAAA,CAAAC,IAAI,CAACC,KAAK,EAAlBC,IAAI;yBADXX,mBAAA,CAOK;MALEY,GAAG,EAAED,IAAI,CAACE,OAAO,CAACC;QACzBZ,mBAAA,CAAiC,YAAAa,gBAAA,CAAzBJ,IAAI,CAACE,OAAO,CAACG,IAAI,kBACzBd,mBAAA,CAAkC,YAAAa,gBAAA,CAA1BJ,IAAI,CAACE,OAAO,CAACI,KAAK,kBAC1Bf,mBAAA,CAA6B,YAAAa,gBAAA,CAArBJ,IAAI,CAACO,QAAQ,kBACrBhB,mBAAA,CAA6C,YAAAa,gBAAA,CAArCI,QAAA,CAAAC,YAAY,CAACT,IAAI,EAAEU,OAAO,oB;oCAGtCnB,mBAAA,CAMQ,gBALJA,mBAAA,CAIK,a,0BAHDA,mBAAA,CAA0B;IAAtBH,OAAO,EAAC;EAAG,GAAC,OAAK,sBACrBG,mBAAA,CAA6B,YAAAa,gBAAA,CAAtBO,IAAA,CAAAC,cAAc,kBACrBrB,mBAAA,CAAkD,MAAlDsB,UAAkD,EAAAT,gBAAA,CAAhCO,IAAA,CAAAG,cAAc,CAACJ,OAAO,oB,mCAMvDnB,mBAAA,CAOM;IAPDJ,KAAK,EAAC;EAAkB,IAC1BI,mBAAA,CAA0C;IAAtCJ,KAAK,EAAC;EAAU,GAAC,kBAAgB,GACrCI,mBAAA,CAA2D;IAAxDJ,KAAK,EAAC;EAAoB,GAAC,2BAAyB,GAEvDI,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAsB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}